version: "3.9"

services:
  web:
    build:
      context: ./web
      args:
        - DEV=true
      dockerfile: dockerfile
    ports:
      - 8002:8002
    volumes:
      - ./web:/web
      - /web/node_modules
    command: >
      sh -c "npm run dev -- --port 8002"
    environment:
      - DEBUG=1
    env_file:
      - ./.env
    depends_on:
      - api

  api:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - 8000:8000
      - 3000:3000 # for debugger
    volumes:
      - ./api:/api
      - dev-static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env
    environment:
      - DB_HOST=db
      - SYNTHESIS_CORE_BASE_URL=http://api_synthesis:8001
      - DEBUG=1
    depends_on:
      - db
      - redis
      - api_synthesis

  api_synthesis:
    build:
      context: ./api-synthesis
      args:
        - DEV=true
      dockerfile: dockerfile
    ports:
      - 8001:8001
      - 3001:3001 # for debugger
      - 3002:3002 # for debugger
    volumes:
      - ./api-synthesis:/api-synthesis
    command: >
      sh -c "uvicorn app.server:app --host 0.0.0.0 --port 8001 --reload"
    environment:
      - DB_HOST=db
      - DEBUG=1
    env_file:
      - ./.env
    depends_on:
      - db

  celery:
    restart: always
    build:
      context: .
    command: celery -A app worker -l info
    volumes:
      - ./api:/api
    env_file:
      - ./.env
    environment:
      - DB_HOST=db
      - SYNTHESIS_CORE_BASE_URL=http://api_synthesis:8001
      - DEBUG=1
    depends_on:
      - db
      - redis
      - api

  redis:
    image: redis:7-alpine

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
  
volumes:
  dev-db-data:
  dev-static-data:
